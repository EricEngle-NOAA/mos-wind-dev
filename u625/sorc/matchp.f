      SUBROUTINE MATCHP(KFILDO,IP10,KFILM,
     1                  ID,JDPARS,TRESHL,JD,ND4,NPRED,IER)
C 
C        JULY      2000   GLAHN   TDL   MOS-2000 
C        AUG       2000   MCE     MODIFIED FORMAT STMNTS FOR IBM
C
C        PURPOSE 
C            TO READ A VARIABLE LIST IN THE FORMAT INPUT TO U201
C            INTO JD( , ) AND TO WRITE OUT TO IP10 THOSE VARIABLES
C            IN THE UNIQUE PREDICTOR LIST IN ID( , ) THAT ARE NOT
C            IN JD( , ).  KFILM CAN BE THE DEFAULT INPUT FILE,
C            OR CAN BE A SEPARATE FILE.
C
C        DATA SET USE 
C            KFILDO - DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                     (OUTPUT) 
C            IP10   - UNIT NUMBER FOR OUTPUT FILE FOR VARIABLE
C                     LIST NOT IN THE U201-LIKE INPUT.  (OUTPUT) 
C            KFILM  - UNIT NUMBER FROM WHICH TO READ VARIABLE LIST.
C                     IT IS ASSUMED FILE HAS BEEN OPENED.  (OUTPUT) 
C 
C        VARIABLES 
C              KFILDO = DEFAULT UNIT NUMBER FOR OUTPUT (PRINT) FILE.
C                       (INPUT) 
C                IP10 = UNIT NUMBER FOR OUTPUT FILE FOR VARIABLE
C                       LIST NOT IN THE U201-LIKE INPUT.  (INPUT) 
C               KFILM = UNIT NUMBER FROM WHICH TO READ VARIABLE LIST.
C                       IT IS ASSUMED FILE HAS BEEN OPENED.  (INPUT)
C             ID(J,N) = THE UNIQUE INTEGER VARIABLE ID'S (J=1,4)
C                       (N=1,NPRED).  (INPUT)
C         JDPARS(J,N) = THE PARSED, INDIVIDUAL COMPONENTS OF THE 
C                       VARIABLE ID'S CORRESPONDING TO JD( ,N)
C                       (J=1,15), (N=1,NVRBL).  (OUTPUT)
C                       J=1--CCC (CLASS OF VARIABLE),
C                       J=2--FFF (SUBCLASS OF VARIABLE),
C                       J=3--B (BINARY INDICATOR),
C                       J=4--DD (DATA SOURCE, MODEL NUMBER),
C                       J=5--V (VERTICAL APPLICATION),
C                       J=6--LBLBLBLB (BOTTOM OF LAYER, 0 IF ONLY 
C                            1 LAYER),
C                       J=7--LTLTLTLT (TOP OF LAYER),
C                       J=8--T (TRANSFORMATION),
C                       J=9--RR (RUN TIME OFFSET, ALWAYS + AND BACK 
C                            IN TIME),
C                       J=10--OT (TIME APPLICATION),
C                       J=11--OH (TIME PERIOD IN HOURS),
C                       J=12--TAU (PROJECTION IN HOURS),
C                       J=13--I (INTERPOLATION TYPE),
C                       J=14--S (SMOOTHING INDICATOR), AND
C                       J=15--G (GRID INDICATOR).
C           TRESHL(N) = THE BINARY THRESHOLD CORRESPONDING TO 
C                       JDPARS( ,N) (N=1,NVRBL).  (OUTPUT)
C             JD(J,N) = THE VARIABLES READ IN MATCHP, IF ANY, (J=1,4)
C                       (N=1,NVRBL).  (INTERNAL/OUTPUT)
C                 ND4 = MAXIMUM NUMBER OF VARIABLES THAT CAN BE DEALT
C                       WITH IN ONE RUN.  SECOND DIMENSION OF ID( , ),
C                       JD( , ), AND JDPARS( , ) AND DIMENSION
C                       OF TRESHL( ).  (INPUT)
C               NPRED = THE NUMBER OF VARIABLES IN ID( , ).  (INPUT)
C                 IER = STATUS RETURN.  (OUTPUT)
C                        0 = GOOD RETURN.
C                       40 = ERROR READING VARIABLE LIST.
C                       41 = DIMENSION ND4 ABOUT TO BE EXCEEDED.
C            ITEMP(J) = WORK ARRAY (J=1,6).  (INTERNAL)
C                       J=1--FIRST ID = ID(1, ),
C                       J=2--SECOND ID = ID(2, ),
C                       J=3--THIRD ID = ID(3, ),
C                       J=4--LAST PORTION OF ID = ID(4, ),
C                       J=5--FRACTIONAL PART OF TRESHL, AND
C                       J=6--TEN'S EXPONENT OF ITEMP(5).
C                TEMP = SIGN OF THRESHOLD.  USED READING VARIABLE LIST
C                       IN SAME MANNER AS IN U201.  (CHARACTER*1) 
C                       (INTERNAL)
C                NERR = COUNTS ERRORS FOR PURPOSES OF KNOWING WHEN TO
C                       PRINT DIAGNOSTICS.  (INTERNAL)
C               NVRBL = THE NUMBER OF VARIABLES IN JD( , ).  (INTERNAL)
C                NADD = THE NUMBER OF VARIABLES IN LD( , ).  (INTERNAL)
C                EXPS = SIGN OF EXPONENT FOR WRITING.  (CHARACTER*1)
C                       (INTERNAL)
C                   E = CHARACTER "E" USED FOR WRITING VARIABLE LIST.
C                       (CHARACTER*1)  (INTERNAL)
C                  DP = DECIMAL POINT "." USED FOR WRITING VARIABLE 
C                       LIST.  (CHARACTER*1)  (INTERNAL)
C               ISTOP = USED ONLY IN PRSID.  (INTERNAL)
C 
C        NONSYSTEM SUBROUTINES CALLED 
C            PRSID
C
      CHARACTER*1 TEMP,EXPS,E,DP,IS1
C
      DIMENSION ID(4,ND4),JDPARS(15,ND4),TRESHL(ND4),JD(4,ND4)
      DIMENSION TRESHM(ND4),LD(4,ND4),INDEX(ND4)
C        LD(, ), INDEX( ), AND TRESHM( ) ARE AUTOMATIC ARRAYS.
      DIMENSION ITEMP(6),JTEMP(3)
C
      DATA E/'E'/,
     1     DP/'.'/,
     2     IZERO/0/
C
      IER=0
      NERR=0
      ISTOP=0
      N=1
C
C        READ PREDICTOR ID.
C
 102  READ(KFILM,103,IOSTAT=IOS,ERR=104,END=150)(ITEMP(J),J=1,4),
     1            TEMP,ITEMP(5),ITEMP(6),(JTEMP(J),J=1,3)
 103  FORMAT(I9,1X,I9,1X,I9,1X,I3,1X,A1,1X,I4,1X,I3,4X,3I2)
C
      IF(IP10.NE.0)THEN
         IF(N.EQ.1)WRITE(IP10,1030)
 1030    FORMAT(/' VARIABLES AS READ BY MATCHP')
C
         IF(ITEMP(6).LT.0)THEN
            EXPS='-'
         ELSE
            EXPS='+'
         ENDIF
C
         ITEMP6=ABS(ITEMP(6))
         WRITE(IP10,220)(ITEMP(J),J=1,4),
     1            TEMP,DP,ITEMP(5),E,EXPS,ITEMP6,(JTEMP(J),J=1,3)
      ENDIF
C
      GO TO 120
C
 104  NERR=NERR+1
      IER=40
 
      WRITE(KFILDO,107)N,IOS
 107  FORMAT(/,' ****ERROR READING VARIABLE ID NO.',I4,
     1        '.  IOSTAT =',I5,'.  VARIABLE SKIPPED.')
      IF(IP10.NE.KFILDO)WRITE(IP10,107)N,IOS
      GO TO 102
C      
 120  IF(ITEMP(1).EQ.999999)GO TO 150
C
C        STORE THIS VARIABLE ID, UNLESS ND4 WILL BE EXCEEDED.
C
      IF(N.LE.ND4)GO TO 125
      IER=41
      NERR=NERR+1
      WRITE(KFILDO,122)ND4
 122  FORMAT(/,' ****ND4 = ',I4,' TOO SMALL IN MATCHP.')
      GO TO 180
C
C        PARSE ID'S INTO 15 COMPONENT PARTS JD(J, ) 
C        (J=1,15) AND THRESH( ).
C
 125  CALL PRSID(KFILDO,ITEMP,TEMP,JD(1,N),JDPARS(1,N),TRESHM(N),ISTOP)
C
C        PREPARE "BASIC" VARIABLE ID'S, THE VARIABLE ID'S WITHOUT
C        THE "PROCESSING" INFORMATION.
C
C        OMIT VARIABLE IF IT IS A DUPLICATE.
C
      IF(N.EQ.1)GO TO 130
C
      DO 129 J=1,N-1
      IF(JD(1,J).NE.JD(1,N).OR.
     1   JD(2,J).NE.JD(2,N).OR.
     2   JD(3,J).NE.JD(3,N).OR.
     3   JD(4,J).NE.JD(4,N))GO TO 129
      WRITE(KFILDO,128)(JD(L,N),L=1,4)
 128  FORMAT(/' ****DUPLICATE VARIABLE DELETED',4I11)
      GO TO 102
C
 129  CONTINUE
C
 130  N=N+1
      GO TO 102
C      
 150  NVRBL=N-1
C
C        WRITE VARIABLE LIST WHEN REQUIRED.  LIST IS ALWAYS WRITTEN
C        TO DEFAULT OUTPUT WHEN THERE HAS BEEN AN ERROR.
C
      IF(NVRBL.EQ.0)THEN
         WRITE(KFILDO,160)
 160     FORMAT(/' NO U201 VARIABLE LIST READ IN')
         IF(IP10.NE.0.AND.IP10.NE.KFILDO)WRITE(IP10,160)
         GO TO 185
      ENDIF
C
 180  IF(NERR.NE.0)WRITE(KFILDO,181)NVRBL
 181  FORMAT(/,' ',I4,' VARIABLES AND PARSED IDS IN ORDER READ IN')
      IF(NERR.NE.0)WRITE(KFILDO,182)(N,(JD(J,N),J=1,4),
     1                              (JDPARS(J,N),J=1,15),
     2                              TRESHM(N),N=1,NVRBL)
 182  FORMAT('  NO.     JD(1)     JD(2)     JD(3)      JD(4)',
     2       '   CCC FFF B DD    V LLLL UUUU    T RR  O HH',
     3       ' TAU    I S G    THRESHOLD',/, 
     4      (' ',I4,1X,I9.9,1X,I9.9,1X,I9.9,1X,I10.3,
     5       2X,I4.3,I4.3,I2,I3,3X,I2,I5,I5,3X,
     6       I2,I3,I3,I3,I4,3X,I2,I2,I2,F13.6))       
      IF(NERR.NE.0.AND.KFILDO.NE.IP10.OR.NERR.EQ.0.AND.IP10.NE.0)
     1   WRITE(IP10,181)NVRBL
      IF(NERR.NE.0.AND.KFILDO.NE.IP10.OR.NERR.EQ.0.AND.IP10.NE.0)
     1   WRITE(IP10,182)(N,(JD(J,N),J=1,4),
     2                 (JDPARS(J,N),J=1,15),
     3                 TRESHM(N),N=1,NVRBL)
C
C        GENERATE LIST IN LD( , ) OF VARIABLES IN ID( , ) THAT ARE 
C        NOT IN JD( , ) AND WRITE THE LIST.
C
 185  NADD=0
C
      DO 200 N=1,NPRED
C
      IF(NVRBL.EQ.0)GO TO 195
C        THE ABOVE STATEMENT FOR SAFETY.
C
      DO 190 M=1,NVRBL
C        IF THERE IS NO LIST (NVRBL=0), ALL NPRED UNIQUES
C        PREDICTORS WILL BE PLACED IN THE LSIT.
      IF(ID(1,N).EQ.JD(1,M).AND.
     1   ID(2,N).EQ.JD(2,M).AND.
     2   ID(3,N).EQ.JD(3,M).AND.
     3   ID(4,N).EQ.JD(4,M))GO TO 200
 190  CONTINUE
C
C        THERE IS NOT A MATCH.  ADD TO LD( , ) LIST.
C
 195  NADD=NADD+1
      LD(1,NADD)=ID(1,N)
      LD(2,NADD)=ID(2,N)
      LD(3,NADD)=ID(3,N)
      LD(4,NADD)=ID(4,N)
 200  CONTINUE
C 
      IF(NADD.EQ.0)THEN
         WRITE(IP10,205)
 205     FORMAT(/' ALL VARIABLES IN THE UNIQUE LIST ARE IN THE',
     1           ' U201 LIST.')
      ELSE
         WRITE(IP10,209)NADD,((LD(J,N),J=1,4),N=1,NADD)
 209     FORMAT(/' ',I4,' VARIABLES IN THE UNIQUE LIST THAT ARE',
     1           ' NOT IN THE U201 LIST.  UNSORTED, THEY ARE:'/
     2           (1X,4I10))
C
C           SORT THE VARIABLES IN LD( , ), LOW TO HIGH.
C
         CALL SORTEM(KFILDO,LD,INDEX,TRESHM,NADD)
C
         WRITE(IP10,210)NADD
 210     FORMAT(/' ',I4,' VARIABLES IN THE UNIQUE LIST THAT ARE',
     1           ' NOT IN THE U201 LIST.  SORTED, THEY ARE:'/)
C
         DO 230 N=1,NADD
         ISG=LD(4,N)-(LD(4,N)/1000)*1000
C           ISG = THE LAST THREE DIGITS OF THE 4TH ID WORD.
         IWXY=LD(4,N)/1000
         IEXP=IWXY-(IWXY/100)*100
C           IEXP IS THE EXPONENT OF THE THRESHOLD.
C
C           COMPUTE THE SIGN OF THE EXPONENT, EXPS.
C           50 HAD BEEN ADDED TO NEGATIVE NUMBERS.
C
         IF(IEXP.GT.50)THEN
            EXPS='-'
            IEXP=IEXP-50
         ELSE
            EXPS='+'
         ENDIF
C
C           COMPUTE THE ABSOLUTE VALUE OF THE THRESHOLD, IWWWW,
C           AND ITS SIGN, IS1.
C
         IWWWW=LD(4,N)/100000
         ISIGN=IWWWW/10000
C
         IF(ISIGN.EQ.1)THEN
            IS1='-'
            IWWWW=IWWWW-ISIGN*10000
         ELSE
            IS1=' '
         ENDIF
C
         IWWWW=ABS(IWWWW)
C
         WRITE(IP10,220)(LD(J,N),J=1,3),ISG,IS1,DP,IWWWW,E,EXPS,IEXP,
     1                   IZERO,IZERO,IZERO 
 220     FORMAT(I9.9,1X,I9.9,1X,I9.9,1X,I3.3,1X,A1,A1,I4.4,A1,A1,I2.2,
     1          4X,3I2)  
 230     CONTINUE         
C
      ENDIF
C
      RETURN
      END 
