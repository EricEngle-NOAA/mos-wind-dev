      PROGRAM U351
C
C        NOVEMBER  1996   GLAHN   TDL   MOS-2000
C        MARCH     1998   GLAHN   CHANGED CALL TO RDSNAM BECAUSE AN
C                                 ARGUMENT HAD BEEN ADDED
C        MAY       1999   GLAHN   ADDED NEW, TIMEZ( ) AND SECOND
C                                 DIMENSION TO CCALL( , ) FOR RDSTAL
C        FEBRUARY  2000   GLAHN   CHANGED READING FORMAT FROM 10F8.0 TO
C                                 7F9.0; ADDED SEVERAL ERROR CHECKS TO
C                                 MORE CLOSELY PARALLEL U352; SPELLING.
C        FEBRUARY  2000   GLAHN   ADDED READING STATION LIST AND DATA
C                                 FROM FILE CFILP AND ORDERING DATA
C        FEBRUARY  2000   GLAHN   CHANGED CALL TO RDF
C        MAY       2000   GLAHN   CHANGED IDUM( ) COMMENT
C        SEPTEMBER 2000   GLAHN   INSERTED NCHAR=MIN(NCHAR,32) BELOW 248;
C                                 COMMENT BEFORE LOOP 111
C        NOVEMBER  2000   GLAHN   ADDED TO PURPOSE; ADDED COMMENT ABOVE
C                                 140; ADDED IER CHECK AT FORMAT 1041
C        JUNE      2001   ANTOLIK REMOVED CHECK AT LINE 220 WHICH REQUIRED THAT
C                                 OUTPUT STATION LIST BE IDENTICAL TO LIST ON 
C                                 ASCII INPUT FILE
C        JULY      2001   DALLAVALLE   CHANGED CALL TO RDF TO RDF_U351
C                                      TO AVOID PROBLEM WITH READING DATA 
C                                      VALUES THAT ARE TRUE 0.0
C        SEP       2001   MCE     NUMEROUS FORMAT CHANGES MADE TO COMPILE ON IBM
C        DECEMBER  2005   RUDACK  ADDED DIAGNOSTIC PRINT AND CHANGED A STOP
C                                 NUMBER TO AVOID A CONFLICT WITH ANOTHER
C                                 IDENTICAL STOP NUMBER.
C        OCTOBER   2012   ENGLE   CHANGED CALL FROM RDTDLM TO RDTDLMC WHEN READING
C                                 STATION CALL LETTERS; CHANGED CALL FROM WRTDLM TO
C                                 WRTDLMC WHEN WRITING STATION CALL LETTERS ADDED
C                                 PLAIN TO ALL CALLS TO PAWRA.
C 
C        PURPOSE 
C            TO WRITE A MOS-2000 RANDOM ACCESS EXTERNAL FILE WITH PACKED
C            DATA.  THE FILE MUST HAVE BEEN CREATED WITH U350.  IF THESE
C            DATA ARE THE FIRST TO BE WRITTEN TO THE FILE, THE DIRECTORY
C            RECORD WILL BE WRITTEN.  OTHERWISE, WHEN THE FILE IS 
C            OPENED THE DIRECTORY WILL BE CHECKED TO AGREE WITH THE
C            ONE PROVIDED IN THIS RUN.  OPTIONALLY, THE STATION WBAN
C            NUMBERS, ELEVATIONS, LATITUDES, AND LONGITUDES WILL BE
C            WRITTEN.  THE INPUT DATA ARE FROM AN ASCII FILE.
C            THE CALL LETTERS RECORDS ON THE INPUT AND OUTPUT FILES
C            NEED NOT MATCH.  FOR INSTANCE, THERE MAY NOT BE CONSTANTS
C            FOR ALL STATIONS IN THE RANDOM ACCESS FILE; IN THAT 
C            CASE, THE MISSING VALUES ARE 9999.  ALSO, THERE COULD
C            BE CONSTANTS ON THE INPUT THAT ARE NOT TO BE PUT ON
C            THE RANDOM ACCESS FILE.  MULTIPLE FILES OF INPUT DATA
C            ARE ACCOMMODATED.  ALL DATA ARE WRITTEN WITH REPLACEMENT.
C
C        DATA SET USE 
C            KFILDI    - UNIT NUMBER FOR INPUT FILE.  (INPUT)
C            KFILDO    - UNIT NUMBER FOR OUTPUT (PRINT) FILE. (OUTPUT) 
C            KFILD(J)  - THE UNIT NUMBER FOR WHERE THE STATION LIST
C                        (J=1) AND THE STATION DIRECTORY (J=2) RESIDES.
C                        CORRESPONDS TO DIRNAM(J).  WHEN KFILD(1) = 
C                        KFILDI, THE DEFAULT INPUT IS INDICATED,
C                        DIRNAM(1) IS NOT USED, AND THE FILE IS NOT
C                        OPENED.  KFILD(1) CAN EQUAL KFILD(2), IN WHICH 
C                        CASE THE STATION LIST IS TAKEN FROM THE
C                        DIRECTORY (I.E., A SEPARATE STATION LIST IS NOT
C                        PROVIDED).  (INPUT)
C            KFILX     - UNIT NUMBER FOR THE OUTPUT RANDOM ACCESS FILE.
C                        (INPUT/OUTPUT)
C            KFILP(J)  - UNIT NUMBER FOR THE INPUT ASCII FILE (J=1) AND
C                        THE STATION DIRECTORY (J=2).  CORRESPONDS TO
C                        CFILP(J).  (INPUT)
C
C        VARIABLES 
C              KFILDI = UNIT NUMBER FOR INPUT FILE.
C              KFILDO = UNIT NUMBER FOR OUTPUT (PRINT) FILE.  SET TO 12 
C                       BY DATA STATEMENT. 
C            KFILD(J) = UNIT NUMBER FOR WHERE THE STATION LIST (J=1)
C                       AND THE STATION DIRECTORY (J=2) RESIDES.
C                       CORRESPONDS TO DIRNAM(J).  WHEN KFILD(1) =
C                       KFILDI, THE DEFAULT INPUT IS INDICATED, 
C                       DIRNAM(1) IS NOT USED, AND THE FILE IS NOT 
C                       OPENED.  KFILD(1) CAN EQUAL KFILD(2), IN WHICH 
C                       CASE THE STATION LIST IS TAKEN FROM THE 
C                       DIRECTORY (I.E., A SEPARATE STATION LIST IS NOT
C                       PROVIDED).
C               KFILX = UNIT NUMBER OF THE OUTPUT RANDOM ACCESS FILE.
C               CFILX = FILE NAME OF OUTPUT RANDOM ACCESS FILE.
C                       (CHARACTER*60)
C            KFILP(J) = UNIT NUMBERS OF THE INPUT ASCII FILE (J=1) AND
C                       THE STATION DIRECTORY (J=2).
C            CFILP(J) = FILE NAMES OF INPUT ASCII FILE AND DIRECTORY.
C                       CORRESPONDS TO KFILP(J).  (CHARACTER*60)
C                 ND1 = THE MAXIMUM NUMBER OF STATIONS THAT CAN BE DEALT
C                       WITH ON THIS RUN.  DIMENSION OF SEVERAL
C                       VARIABLES.  SET BY PARAMETER.
C                 ND5 = ND1.  ND5 IS USED TO BE CONSISTENT WITH OTHER
C                       MOS-2000 PROGRAMS.  SET BY PARAMETER.
C                 ND7 = DIMENSION OF IS0( ), IS1( ), IS2( ),AND IS4( ).
C                       SHOULD BE 54.  SET BY PARAMETER.
C              L3264B = INTEGER WORD LENGTH IN BITS OF MACHINE BEING
C                       USED (EITHER 32 OR 64).  SET BY PARAMETER.
C              L3264W = NUMBER OF WORDS IN 64 BITS (EITHER 1 OR 2).  
C                       CALCULATED BY PARAMETER, BASED ON L3464B.
C        ICALL(L,K,6) = 8 STATION CALL LETTERS AS CHARACTERS IN AN 
C                       INTEGER VARIABLE (L=1,L3264W) (K=1,NSTA).
C                       NOTE THAT THIS REQUIRES TWO 32-BIT WORDS TO HOLD
C                       THE DESCRIPTION BUT ONLY ONE 64-BIT WORD.
C                       EQUIVALENCED TO CCALL( , ).
C       ICALLD(L,K,6) = 8 STATION CALL LETTERS AS CHARACTERS IN AN
C                       INTEGER VARIABLE (L=1,L3264W) (K=1,ND1).  THIS
C                       LIST IS USED IN RDTDLM.  EQUIVALENCED TO 
C                       CCALLD( ,6).
C          CCALL(K,6) = 8 STATION CALL LETTERS (K=1,NSTA).
C                       EQUIVALENCED TO ICALL( , , ).
C         CCALLD(K,6) = 8 STATION CALL LETTERS (K=1,NSTA).  THIS LIST IS
C                       USED IN RDSTAD TO RETAIN THE ORIGINAL LIST IN
C                       CCALL( ,1).   EQUIVALENCED TO ICALLD( , , ).
C             NAME(K) = NAMES OF STATIONS (K=1,NSTA)  (CHARACTER*20)
C           DIRNAM(J) = HOLDS NAME OF DATA SET CONTAINING THE STATION
C                       CALL LETTERS (J=1) AND STATION DIRECTORY (J=2).
C                       IT IS EXPECTED THAT THE STATIONS IN
C                       THE DIRECTORY BE ORDERED ALPHABETICALLY BY CALL
C                       LETTERS.  (CHARACTER*60)
C            NELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  EQUIVALENCED
C                       TO ELEV( ).
C             ELEV(K) = ELEVATION OF STATIONS (K=1,NSTA).  EQUIVALENCED
C                       TO NELEV( ).
C            IWBAN(K) = WBAN NUMBERS OF STATIONS (K=1,NSTA).
C                       EQUIVALENCED TO WBAN( ).
C             WBAN(K) = WBAN NUMBERS OF STATIONS (K=1,NSTA).
C                       EQUIVALENCED TO IWBAN( ).
C           STALAT(K) = LATITUDE OF STATIONS (K=1,NSTA).
C           STALON(K) = LONGITUDE OF STATIONS (K=1,NSTA).
C           IFOUND(K) = SCRATCH IN TWO SUBROUTINES (K=1,NSTA).
C           ITIMEZ(K) = SCRATCH IN SUBROUTINE RDSTAL (K=1,NSTA).
C           RECORD(K) = HOLDS CONSTANT DATA FOR WRITING (K=1,NSTA)
C                NSTA = THE NUMBER OF STATIONS BEING DEALT WITH.
C               IC(J) = SCRATCH ARRAY USED IN PACKING THE DATA
C                       (J=1,ND1).
C            IPACK(J) = SCRATCH ARRAY USED IN PACKING THE DATA
C                       (J=1,ND5).
C              IS0(L) = HOLDS THE VALUES TO FURNISH FOR GRIB
C                       SECTION 0 (L=1,ND7).
C              IS1(L) = HOLDS THE VALUES TO FURNISH FOR GRIB
C                       SECTION 1 (L=1,ND7).
C              IS2(L) = HOLDS THE VALUES FOR GRIB SECTION 2 (L=1,ND7).
C                       NOT ALL LOCATIONS ARE USED.
C              IS4(L) = HOLDS THE VALUES FOR GRIB SECTION 4.  NONE OF 
C                       THE VALUES NEED BE FURNISHED BY THE USER.
C                       IS4(2) IS SET BY PACK1D TO INDICATE
C                       NON-GRIDPOINT DATA, COMPLEX PACKING, ORIGINAL
C                       SCALED VALUES TO BE PACKED (NOT SECOND ORDER
C                       SPATIAL DIFFERENCES), AND MISSING VALUES OR NOT
C                       DEPENDING ON WHETHER OR NOT XMISS NE OR EQ ZERO,
C                       RESPECTIVELY.
C               ID(J) = MOS IDS OF VARIABLES TO READ TO READ DATA FOR
C                       AND TO WRITE (J=1,4).
C              ISCALE = THE SCALING PARAMETER FOR THE SET OF DATA
C                       IDENTIFIED IN ID( ).  THE DATA WILL BE PACKED TO
C                       THE RESOLUTION DATA*10**ISCALE ROUNDED.
C               NCHAR = THE NUMBER OF CHARACTERS OF PLAIN LANGUAGE IN 
C                       PLAIN TO PACK WITH THE DATA, MAXIMUM OF 32.
C       IPLAIN( , ,J) = NAMES OF VARIABLES (J=1,5).  EQUIVALENCED TO 
C                       PLAIN.
C            PLAIN(J) = NAMES OF VARIABLES (J=1,5).  EQUIVALENCED TO 
C                       IPLAIN( , , ).  (CHARACTER*32)
C               IP(J) = PRINT PARAMETERS (J=1,25).  ALL ARE SET BY DATA
C                       STATEMENT TO THE SAME VALUE AS THE DEFAULT
C                       KFILDO = 12.
C              XMISSP = SET TO 9999. INDICATING THAT ANY MISSING DATA 
C                       VALUE WILL BE PACKED AS 9999.
C              XMISSS = SET TO 0 TO INDICATE THERE WILL BE NO SECONDARY 
C                       MISSING VALUE INDICATOR (SEE XMISSP).
C               MINPK = VALUES ARE PACKED IN GROUPS OF MINIMUM SIZE
C                       MINPK.  ONLY WHEN THE NUMBER OF BITS TO HANDLE
C                       A GROUP CHANGES WILL A NEW GROUP BE FORMED.  
C                       SET TO 14 BY DATA STATEMENT.
C                  LX = THE NUMBER OF GROUPS (THE NUMBER OF 2ND ORDER 
C                       MINIMA).  WHILE NEEDED ONLY IN SUBROUTINE PACK,
C                       IT IS OUTPUT IN THE ARGUMENT LIST OF PAWRA IN 
C                       CASE THE USER WANTS TO KNOW IT.  
C              IOCTET = THE TOTAL RECORD SIZE IN OCTETS WRITTEN TO THE
C                       RANDOM ACCESS FILE.
C                 IER = STATUS RETURN FROM SUBROUTINES.
C                       0 = GOOD VALUE.
C                       SEE CALLED SUBROUTINES FOR OTHER VALUES.
C                 NEW = 1.  THIS INDICATES TO THE WRITING ROUTINES THAT
C                       NEW CALL LETTERS ARE TO BE USED--THAT IS, THE
C                       ONES IN THE FIRST COLUMN OF THE STATION DIRECTORY.
C                       NO OPTION IS PROVIDED FOR OLD CALL LETTERS.
C               STATE = SET TO A STATEMENT NUMBER FOR USE IN WRITING
C                       DIAGNOSTIC.
C               BLANK = 8 BLANK CHARACTERS.  (CHARACTER*8)
C               RUNID = 72 CHARACTERS TO IDENTIFY RUN.  (CHARACTER*72)
C            INDEX(J) = HOLDS THE CORRESPONDENCE BETWEEN THE STATIONS
C                       READ AND THE STATION LIST TO WRITE (J=1,NSTA).
C             DATA(J) = THE DATA TO WRITE, AFTER ORDERING (J=1,NSTA).
C             IDUM(J) = DUMMY ARRAY FOR CALL TO RDSNAM (J=1,2).
C              NVALUE = NUMBER OF BYTES READ FROM THE RANDOM ACCESS
C                       FILE, THEN THE NUMBER OF WORDS.
C              IWRELE = INDICATES WHETHER (=1) OR NOT (=0) THE ELEVATIONS
C                       TAKEN FROM THE STATION DIRECTORY ARE TO BE 
C                       WRITTEN.
C              IWRWBN = INDICATES WHETHER (=1) OR NOT (=0) THE WBAN NUMBERS
C                       TAKEN FROM THE STATION DIRECTORY ARE TO BE 
C                       WRITTEN.
C              IWRLAT = INDICATES WHETHER (=1) OR NOT (=0) THE LATITUDES
C                       TAKEN FROM THE STATION DIRECTORY ARE TO BE 
C                       WRITTEN.
C              IWRLON = INDICATES WHETHER (=1) OR NOT (=0) THE LONGITUDES
C                       TAKEN FROM THE STATION DIRECTORY ARE TO BE 
C                       WRITTEN.
C 
C        NON SYSTEM SUBROUTINES CALLED 
C           RDSNAM, RDSTAL, RDSTAD,RDTDLM, WRTDLM, PAWRA, RDF_U351, CLFILM,
C           TIMPR, IERX, RDTDLMC, WRTDLMC
C
      PARAMETER (ND1=5000)
      PARAMETER (ND5=ND1)
      PARAMETER (ND7=54)
      PARAMETER (L3264B=32)
      PARAMETER (L3264W=64/L3264B)
C
      CHARACTER*4 STATE
      CHARACTER*8 CCALL(ND1,6),CCALLD(ND1,6),BLANK
      CHARACTER*20 NAME(ND1)
      CHARACTER*60 DIRNAM(2),CFILX,CFILP(2)
      CHARACTER*32 PLAIN(5)
      CHARACTER*72 RUNID
C
      DIMENSION ICALL(L3264W,ND1,6),ICALLD(L3264W,ND1,6)
      DIMENSION NELEV(ND1),ELEV(ND1),IWBAN(ND1),WBAN(ND1),
     1          STALAT(ND1),STALON(ND1),IFOUND(ND1),
     2          RECORD(ND1),IC(ND1),ITIMEZ(ND1),INDEX(ND1),
     3          DATA(ND1)
      DIMENSION IPACK(ND5)
      DIMENSION IS0(ND7),IS1(ND7),IS2(ND7),IS4(ND7)
      DIMENSION IPLAIN(L3264W,4,5)
      DIMENSION ID(4)
      DIMENSION KFILD(2),KFILP(2),IDUM(2),IP(25)
C
      EQUIVALENCE (NELEV,ELEV),(IWBAN,WBAN)
      EQUIVALENCE (PLAIN,IPLAIN),(ICALL,CCALL),(ICALLD,CCALLD)
C
      DATA KFILDI/5/,
     1     KFILDO/12/,
     2     IP/25*12/
      DATA XMISSP/9999./,
     1     XMISSS/0./
      DATA MINPK/14/
      DATA PLAIN/'WBAN NUMBER                     ',
     1           'ELEVATION                       ',
     2           'LATITUDE                        ',
     3           'LONGITUDE                       ',
     4           '                                '/
      DATA BLANK/'        '/
      DATA NEW/1/
      
      CALL TIMPR(KFILDO,KFILDO,'START U351          ')
C
C        OPEN INPUT FILE.
C
      STATE='101 '
      OPEN(UNIT=KFILDI,FILE='U351.CN',STATUS='OLD',IOSTAT=IOS,
     1     ERR=900)
C
C        READ AND PRINT RUN DESCRIPTION.
C
      STATE='102 ' 
      READ(KFILDI,102,IOSTAT=IOS,ERR=900,END=900)RUNID
 102  FORMAT(A72)
      WRITE(KFILDO,103)RUNID
 103  FORMAT(' ',A72)
C
C        READ CONTROL TO INDICATE WHETHER OR NOT WBAN NUMBERS,
C        ELEVATIONS, LATITUDES, AND LONGITUDES WILL BE WRITTEN.
C
      STATE='104 '
      READ(KFILDI,104,IOSTAT=IOS,ERR=900,END=900)
     1     IWRELE,IWRWBN,IWRLAT,IWRLON
 104  FORMAT(4I4)
      WRITE(KFILDO,105)IWRELE,IWRWBN,IWRLAT,IWRLON
 105  FORMAT(/' IWRELE',I4,'   WILL ELEVATIONS BE WRITTEN?'/
     1        ' IWRWBN',I4,'   WILL WBAN NUMBERS BE WRITTEN?'/
     2        ' IWRLAT',I4,'   WILL LATITUDES BE WRITTEN?'/
     3        ' IWRLON',I4,'   WILL LONGITUDES BE WRITTEN?')
C
C        READ AND PROCESS UNIT NUMBERS AND FILE NAMES FOR STATION LIST
C        (CALL LETTERS) AND STATION DIRECTORY WHICH HOLDS CALL LETTERS,
C        LATITUDE, LONGITUDE, WBAN NUMBER, ELEVATION, AND NAME FOR EACH 
C        POSSIBLE STATION.  THIS CAN BE A MASTER DIRECTORY, OR BE A 
C        DIRECTORY SUPPLIED BY A USER.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILD,DIRNAM,IDUM,IDUM,2,N,'OLD',
     1            'FORMATTED',IP,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,106)IER
 106     FORMAT(/' ****ERROR READING UNIT NUMBERS AND NAMES OF STATION',
     1           ' LIST AND DIRECTORY DATA SETS IN U351 AT 106.',
     2           '  IER =',I4)
         STOP 106
      ENDIF
C
      WRITE(KFILDO,107)(KFILD(J),DIRNAM(J),J=1,2)
 107  FORMAT(/' STATION LIST AND DIRECTORY DATA SETS, UNITS AND NAMES.'/
     1       (' ',I4,2X,A60))
C
C        READ AMD PROCESS UNIT NUMBER AND FILE NAME OF OUTPUT
C        RANDOM ACCESS FILE.
C
      CALL RDSNAM(KFILDI,KFILDO,KFILX,CFILX,IDUM,IDUM,1,N,'NOT',
     1            'FORMATTED',IP,IER)
C        NOTE THAT THIS FILE IS NOT OPENED.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,1075)IER
 1075    FORMAT(/' ****ERROR READING UNIT NUMBER AND NAME OF',
     1           ' OUTPUT RANDOM ACCESS FILE IN U351 AT 1075.',
     2           '  IER =',I4)
         STOP 1075
      ENDIF
C
      WRITE(KFILDO,108)KFILX,CFILX
 108  FORMAT(/' RANDOM ACCESS FILE UNIT AND NAME.'/
     1       (' ',I4,2X,A60))
C
C        INITIALIZE CCALL( ,1) AND CCALLD( ,1).
C   
      DO 109 J=1,ND1
      CCALL(J,1)=BLANK
      CCALLD(J,1)=BLANK
 109  CONTINUE
C
C        READ AND PRINT THE STATION DIRECTORY.
C        RDSTAD ALPHABATIZES STATIONS ACCORDING TO MASTER
C        STATION DIRECTORY.
C
      CALL RDSTAD(KFILDO,IP(4),IP(5),KFILD,NEW,CCALL,CCALLD,
     1            NAME,NELEV,IWBAN,STALAT,STALON,ITIMEZ,IFOUND,
     2            ND1,NSTA,IER)
C
      IF(IER.NE.0)THEN
C           RDSTAD WILL HAVE PRODUCED A DIAGNOSTIC FOR ANY
C           IER NE 0.
         WRITE(KFILDO,1095)
1095     FORMAT(/,' ****STOP 1090 IN U351.  ERROR DIAGNOSTIC',
     1            ' CAN BE FOUND JUST ABOVE THE STATION',
     2            ' DICTIONARY LISTING.')
         STOP 1090
      ENDIF
C
C        CONVERT ELEVATIONS AND WBAN NUMBERS TO FLOATING POINT.
C
      DO 110 J=1,NSTA
      ELEV(J)=NELEV(J)
      WBAN(J)=IWBAN(J)
 110  CONTINUE
C
C        ZERO ARRAYS.  IS1(2) = 0 SIGNIFIES NO BIT MAP AND
C        NOT GRIDPOINT DATA.
C
      DO 111 J=1,ND7
      IS0(J)=0
      IS1(J)=0
      IS2(J)=0
      IS4(J)=0
 111  CONTINUE
C
C        READ CALL LETTERS IF THEY EXIST AND CHECK THEM
C        TO MAKE ADDITION OF RECORDS POSSIBLE.
C
      ID(1)=400001000
      ID(2)=0
      ID(3)=0
      ID(4)=0
CINTEL
C      CALL RDTDLM(KFILDO,KFILX,CFILX,ID,ICALLD,ND1*L3264W,NVALUE,
C     1            L3264B,IER)
      CALL RDTDLMC(KFILDO,KFILX,CFILX,ID,CCALLD,ND1*L3264W,NVALUE,
     1            L3264B,IER)
CINTEL
C
      IF(IER.EQ.155)THEN
C           THE DIRECTORY DID NOT EXIST.  THIS IS NOT AN ERROR.
         WRITE(KFILDO,1115)CFILX
 1115    FORMAT('     THE DIRECTORY DOES NOT EXIST ON FILE ',A60,
     1          /,'     SO WRITE THE CALL LETTERS.')
         GO TO 140
C
      ELSEIF(IER.NE.0)THEN
         WRITE(KFILDO,112)IER
 112     FORMAT('     ERROR READING STATION DIRECTORY',
     1       ' IN RANDOM ACCESS FILE IN U351 AT 112.  IER =',I4)
         STOP 1091
      ENDIF
C
      NVALUE=NVALUE/L3264W
C        THE CALL LETTERS ARE 8 BYTES EACH.  THIS IS TWO WORDS
C        ON A 32-BIT MACHINE.  THE NUMBER OF WORDS WRITTEN AND
C        READ MUST ACCOUNT FOR THIS.  THE ACTUAL NUMBER OF CALL
C        LETTERS IS NVALUE/L3264W.
C
C        CALL LETTERS WERE READ.  DO THEY MATCH?
C
      IF(NVALUE.EQ.NSTA)GO TO 125
C
C        MAKE SURE ALL VALUES IN CCALLD( ,1) TO BE PRINTED
C        ARE LEGITIMATE CHARACTERS.  CCALL( , 1) HAS ALREADY
C        BEEN SET TO BLANK.
C
      IF(NVALUE.LT.NSTA)THEN
C
         DO 119 J=NVALUE+1,NSTA
         CCALLD(J,1)=BLANK
 119     CONTINUE
C
      ENDIF
C
      WRITE(KFILDO,120)NSTA,NVALUE,
     1     (J,CCALL(J,1),CCALLD(J,1),J=1,MAX(NVALUE,NSTA))
 120  FORMAT(/' ****NUMBER OF CALL LETTERS TO WRITE =',I5,
     1        ' DOES NOT EQUAL THE NUMBER READ FROM THE',
     2        ' CONSTANT FILE =',I5,'.  STOP IN U351 AT 120.'/
     3        '     NO.  TO WRITE ON CONSTANT FILE',/,
     4       (' ',I6,3X,A8,5X,A8))
C        VALUES BEYOND NVALUE IN CCALL( ,1) WILL NOT BE
C        CHARACTER ORIENTED, AND PROBABLY NOT PRINTABLE AS A8.
      STOP 120
C
 125  MATCH=0
C
      DO 130 J=1,NSTA
      IF(CCALL(J,1).EQ.CCALLD(J,1))GO TO 130
      MATCH=MATCH+1
C
      IF(MATCH.EQ.1)THEN
         WRITE(KFILDO,126)CCALL(J,1),CCALLD(J,1)
 126     FORMAT(/' ****MISMATCH OF CALL LETTERS TO BE WRITTEN',
     1           ' AND THOSE ON RANDOM ACCESS FILE.',2(2X,A8))
      ELSE
         WRITE(KFILDO,127)CCALL(J,1),CCALLD(J,1)
 127     FORMAT(' ****MISMATCH OF CALL LETTERS TO BE WRITTEN',
     1          ' AND THOSE ON RANDOM ACCESS FILE.',2(2X,A8))
      ENDIF
C
 130  CONTINUE
C
      IF(MATCH.EQ.0)GO TO 150
      WRITE(KFILDO,134)(J,CCALL(J,1),CCALLD(J,1),J=1,NSTA)
 134  FORMAT(/'     NO.  TO WRITE     ON CONSTANT FILE'/
     1       (' ',I6,3X,A8,5X,A8))
      WRITE(KFILDO,135)
 135  FORMAT(/'     STOP IN U351 AT 135.' ) 
      STOP 135
C  
C        WRITE CALL LETTERS RECORD WHEN SUCH A RECORD DOES
C        NOT EXIST.
C  
CINTEL
C 140  CALL WRTDLM(KFILDO,KFILX,CFILX,ID,ICALL,NSTA*L3264W,
C     1               0,0,L3264B,IER)
140   CALL WRTDLMC(KFILDO,KFILX,CFILX,ID,CCALL,NSTA*L3264W,
     1                0,0,L3264B,IER)
CINTEL
C        THE CALL LETTERS ARE 8 BYTES EACH.  THIS IS TWO WORDS
C        ON A 32-BIT MACHINE.  THE NUMBER OF WORDS WRITTEN AND
C        READ MUST ACCOUNT FOR THIS.
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,1041)IER
 1041    FORMAT(/' ****ERROR WRITING STATION DIRECTORY',
     1      ' ON RANDOM ACCESS FILE IN U351 AT 141.  IER =',I4)
         STOP 141
      ENDIF
C
C        WRITE WBAN NUMBERS IF DESIRED.  IDS ARE CHECKED,
C        REPLACEMENT IS NOT DONE.
C
 150  IF(IWRWBN.NE.0)THEN
C
         DO 160 J=1,ND7
         IS1(J)=0
 160     CONTINUE
C 
         ID(1)=400003000
         IS1(17)=0
         NCHAR=11
         WRITE(KFILDO,207)ID
         CALL PAWRA(KFILDO,KFILX,CFILX,ID,
     1              WBAN,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2              IS0,IS1,IS2,IS4,ND7,
     3              IPLAIN(1,1,1),PLAIN(1),NCHAR,
     4              XMISSP,XMISSS,LX,IOCTET,
     5              L3264B,L3264W,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,161)IER
 161        FORMAT(/' ****ERROR WRITING WBAN NUMBERS',
     1      ' ON RANDOM ACCESS FILE IN U351 AT 161.  IER =',I4)
            STOP 161
         ENDIF
      ENDIF
C
C        WRITE ELEVATIONS IF DESIRED.  IDS ARE CHECKED,
C        REPLACEMENT IS NOT DONE.
C
      IF(IWRELE.NE.0)THEN
C
         DO 170 J=1,ND7
         IS1(J)=0
 170     CONTINUE
C 
         ID(1)=400005000
         IS1(17)=0
         NCHAR=9
         WRITE(KFILDO,207)ID
         CALL PAWRA(KFILDO,KFILX,CFILX,ID,
     1              ELEV,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2              IS0,IS1,IS2,IS4,ND7,
     3              IPLAIN(1,1,2),PLAIN(2),NCHAR,
     4              XMISSP,XMISSS,LX,IOCTET,
     5              L3264B,L3264W,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,171)IER
 171        FORMAT(/' ****ERROR WRITING ELEVATIONS',
     1      ' ON RANDOM ACCESS FILE IN U351 AT 171.  IER =',I4)
            STOP 171
         ENDIF
      ENDIF
C
C        WRITE LATITUDES IF DESIRED.  IDS ARE CHECKED,
C        REPLACEMENT IS NOT DONE.
C
      IF(IWRLAT.NE.0)THEN
C
         DO 180 J=1,ND7
         IS1(J)=0
 180     CONTINUE
C 
         ID(1)=400006000
         IS1(17)=2
         NCHAR=8
         WRITE(KFILDO,207)ID
         CALL PAWRA(KFILDO,KFILX,CFILX,ID,
     1              STALAT,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2              IS0,IS1,IS2,IS4,ND7,
     3              IPLAIN(1,1,3),PLAIN(3),NCHAR,
     4              XMISSP,XMISSS,LX,IOCTET,
     5              L3264B,L3264W,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,181)IER
 181        FORMAT(/' ****ERROR WRITING LATITUDES',
     1      ' ON RANDOM ACCESS FILE IN U351 AT 181.  IER =',I4)
            STOP 181
         ENDIF
      ENDIF
C
C        WRITE LONGITUDES IF DESIRED.  IDS ARE CHECKED,
C        REPLACEMENT IS NOT DONE.
C
      IF(IWRLON.NE.0)THEN
C
         DO 190 J=1,ND7
         IS1(J)=0
 190     CONTINUE
C 
         ID(1)=400007000
         IS1(17)=2
         NCHAR=9
         WRITE(KFILDO,207)ID
         CALL PAWRA(KFILDO,KFILX,CFILX,ID,
     1              STALON,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2              IS0,IS1,IS2,IS4,ND7,
     3              IPLAIN(1,1,4),PLAIN(4),NCHAR,
     4              XMISSP,XMISSS,LX,IOCTET,
     5              L3264B,L3264W,IER)
C
         IF(IER.NE.0)THEN
            WRITE(KFILDO,191)IER
 191        FORMAT(/' ****ERROR WRITING LONGITUDES',
     1      ' ON RANDOM ACCESS FILE IN U351 AT 191.  IER =',I4)
            STOP 191
         ENDIF
      ENDIF
C
C        READ CONSTANT DATA, PACK, AND WRITE.
C
C        READ AND PROCESS UNIT NUMBER AND FILE NAME OF INPUT
C        ASCII FILE.
C
 1970 CALL RDSNAM(KFILDI,KFILDO,KFILP,CFILP,IDUM,IDUM,2,N,'OLD',
     1            'FORMATTED',IP,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,1975)IER
 1975    FORMAT(/' ****ERROR READING UNIT NUMBERS AND NAMES OF',
     1           ' INPUT ASCII FILE AND STATION DIRECTORY IN U351',
     2           ' AT 1975.  IER =',I4)
         STOP 1975
      ENDIF
C
      IF(N.EQ.0)GO TO 300
C        NO MORE FILES ENDS PROGRAM.  A 99 TERMINATOR
C        IS EXPECTED, BUT IF IT IS NOT FOUND, AN IERX
C        DIAGNOSTIC WILL OCCUR, BUT RDSNAM SHOULD END 
C        WITH IER = 0 AND N = 0.
C
      WRITE(KFILDO,198)(KFILP(J),CFILP(J),J=1,2)
 198  FORMAT(/' ASCII INPUT FILE UNITS AND NAMES.'/
     1       (' ',I4,2X,A60))
C
C        READ AND PRINT THE STATION DIRECTORY.
C        RDSTAL RETURNS STATIONS IN THE ORDER READ.
C
      REWIND(UNIT=KFILP(2))
C        THE DIRECTORY FILE IS REWOUND IN CASE IT WAS READ
C        PREVIOUSLY.
      CALL RDSTAL(KFILDO,IP(4),IP(5),KFILP,NEW,CCALLD,
     1            NAME,NELEV,IWBAN,STALAT,STALON,ITIMEZ,IFOUND,
     2            ND1,MSTA,IER)
C
      IF(IER.NE.0)THEN
C           RDSTAL WILL HAVE PRODUCED A DIAGNOSTIC FOR ANY
C           IER NE 0.
         WRITE(KFILDO,199)
 199     FORMAT('     STOP IN U351 AT 199.')
         STOP 199
      ENDIF
C
C        CHECK TO SEE WHETHER INPUT STATIONS WILL BE
C        OUTPUT.
C
      IFIRST=0
C
      DO 2009 J=1,MSTA
C
      DO 2005 K=1,NSTA
      IF(CCALL(K,1).EQ.CCALLD(J,1))GO TO 2009
 2005 CONTINUE
C
C        A DROP THROUGH HERE MEANS STATION WAS NOT FOUND.
C
      IFIRST=IFIRST+1
      IF(IFIRST.EQ.1)WRITE(KFILDO,2007)
 2007 FORMAT(/' ****STATIONS ON INPUT NOT ON OUTPUT')
      WRITE(KFILDO,2008)IFIRST,CCALL(J,1)
 2008 FORMAT('    ',I4,2X,A8)
C
 2009 CONTINUE
C
C        FORM THE CORRESPONDENCE TABLE IN INDEX( ).
C
      IFIRST=0
C
      DO 204 J=1,NSTA
C
      DO 202 K=1,MSTA
C
      IF(CCALL(J,1).EQ.CCALLD(K,1))THEN
         INDEX(J)=K
         GO TO 204
      ENDIF
 202  CONTINUE
C
C        A DROP THROUGH HERE MEANS STATION WAS NOT FOUND.
C
      INDEX(J)=99999999
      IFIRST=IFIRST+1
      IF(IFIRST.EQ.1)WRITE(KFILDO,203)
 203  FORMAT(/' ****STATIONS ON OUTPUT NOT ON INPUT')
      WRITE(KFILDO,2030)IFIRST,CCALL(J,1)
 2030 FORMAT('    ',I4,2X,A8)
C
 204  CONTINUE
C
      IF(IFIRST.NE.0)WRITE(KFILDO,2045)
 2045 FORMAT(' ')
 205  PLAIN(1)(1:32)=PLAIN(5)(1:32)
      STATE='206 '
      READ(KFILP(1),206,IOSTAT=IOS,ERR=900)
     1     ID,ISCALE,NCHAR,PLAIN(1)
C        NOTE THAT PLAIN IS REUSED.
 206  FORMAT(I9,3I10,2I4,1X,A32)
C
      IF(ID(1).EQ.999999)THEN
C           TERMINATOR IS ID(1) = 999999. THIS IS THE END
C           OF DATA ON THIS FILE.  TRY TO FIND ANOTHER FILE.
         IF(KFILP(1).NE.KFILDI)CLOSE(UNIT=KFILP(1))
C           THE SAME UNIT NUMBER CAN BE USED FOR MULTIPLE
C           INPUTS, PROVIDED IT IS CLOSED.  DON'T CLOSE
C           THE DEFAULT INPUT.
         GO TO 1970
      ENDIF
C
      WRITE(KFILDO,207)ID
 207  FORMAT(' PACKING ID =',1X,I9.9,2I10.9,I11.3)
C
C        INITIALIZE CCALL( ,1) AND CCALLD( ,1).  CCALLD( , ) WAS
C        USED IN RDSTAD, THEN FOR STATION DIRECTORY FROM
C        RANDOM ACCESS FILE; NOW IT IS USED FOR STATIONS
C        FROM THE ASCII INPUT.
C   
      DO 210 J=1,ND1
      CCALLD(J,1)=BLANK
 210  CONTINUE
C
      CALL RDF_U351(KFILDO,KFILDO,KFILP(1),RECORD,ND1,
     1         IFOUND,7,'(7F9.0)',NVAL,999999.,IER)
C  
C        HAS THERE BEEN AN ERROR?
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,215)IER
 215     FORMAT(/' ****ERROR IER =',I4,' IN RDF',
     1           '.  STOP IN U351 AT 215.')
         STOP 215
      ENDIF
C
C        HAS THE TERMINATOR BEEN FOUND?  IF SO, NVAL = 0.
C 
      IF(NVAL.EQ.0)THEN  
C           NVAL = 0 INDICATES THERE WAS NO DATA FOR THIS ID.
C           TRY ANOTHER FILE.  THIS WOULD BE UNUSUAL, TO HAVE
C           AN ID BUT NO DATA.
         IF(KFILP(1).NE.KFILDI)CLOSE(UNIT=KFILP(1))
C           THE SAME UNIT NUMBER CAN BE USED FOR MULTIPLE
C           INPUTS, PROVIDED IT IS CLOSED.  DON'T CLOSE
C           THE DEFAULT INPUT.
         GO TO 1970
      ENDIF
C
C        HAS THE CORRECT NUMBER OF DATA VALUES BEEN READ?
C
C     IF(NVAL.NE.NSTA)THEN
C        WRITE(KFILDO,220)NVAL,ID,NSTA
C220     FORMAT(/' ****NUMBER OF DATA VALUES ='I5,
C    1           ' FOR ID ='1XI9.9,2I10.9,I11.3,
C    2           ' DOES NOT EQUAL THE NUMBER OF STATIONS ='I5'.'/
C    3           '     STOP IN U351 AT 220.')
C        STOP 220
C     ENDIF
C
C        CHANGE ORDER OF STATIONS TO MATCH OUTPUT.
C
      DO 248 J=1,NSTA
      IF(INDEX(J).EQ.99999999)THEN
         DATA(J)=9999.
      ELSE
         DATA(J)=RECORD(INDEX(J))
      ENDIF
C
 248  CONTINUE
C
C     WRITE(KFILDO,2480)(RECORD(J),J=1,MSTA)
C     WRITE(KFILDO,2480)(DATA(J),J=1,NSTA)
C2480 FORMAT(' '10F10.3)
C
C        GUARANTEE NCHAR IS LE 32; TDLPACK HANDLES ONLY 32 CHARACTERS.
C
      NCHAR=MIN(NCHAR,32)
C
C        WRITE THE DATA.
C
      IS1(17)=ISCALE
      CALL PAWRA(KFILDO,KFILX,CFILX,ID,
     1           DATA,IC,ND1,NSTA,IPACK,ND5,MINPK,
     2           IS0,IS1,IS2,IS4,ND7,
     3           IPLAIN(1,1,1),PLAIN(1),NCHAR,
     4           XMISSP,XMISSS,LX,IOCTET,
     5           L3264B,L3264W,IER)
C
      IF(IER.NE.0)THEN
         WRITE(KFILDO,260)(ID(J),J=1,4),IER
 260     FORMAT(/' ****ERROR WRITING DATA FOR',1X,I9.9,2I10.9,I11.3,
     1           ' ON RANDOM ACCESS FILE IN U351 AT 260.  IER =',I4)
         STOP 260
      ENDIF
C
      GO TO 205 
C        TRY ANOTHER DATA SET WITH THE SAME STATION LIST
C        FROM THE SAME FILE.   
C
C        CLOSE RANDOM ACCESS FILE.
C
 300  CALL CLFILM(KFILDO,KFILX,IER)
      WRITE(KFILDO,301)
 301  FORMAT(' ')
      CALL TIMPR(KFILDO,KFILDO,'END U351            ')
      STOP 351 
C
 900  CALL IERX(KFILDO,KFILDO,IOS,'U351  ',STATE)
      WRITE(KFILDO,901)
 901  FORMAT(' ')
      CALL TIMPR(KFILDO,KFILDO,'END U351            ')
      STOP 900 
      END
           
